<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="1" ignored="1" total="59" passed="57" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-08T16:04:52 CST" name="Suite" finished-at="2024-05-08T16:28:32 CST" duration-ms="1420283">
    <groups>
      <group name="ErrorHandling">
        <method signature="AreaModuleTest.areaCodeDupValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" name="areaCodeDupValidation" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="AreaModuleTest.areaNameDupValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" name="areaNameDupValidation" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="AreaModuleTest.fixedRateMaxLimit()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" name="fixedRateMaxLimit" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="UserModuleTest.userEmailDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" name="userEmailDupValidation" class="automation.AdminTest.UserModuleTest"/>
        <method signature="AllLoginTest.loginWithInvalidPassword()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" name="loginWithInvalidPassword" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AllLoginTest.loginWithoutAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" name="loginWithoutAccess" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AllLoginTest.loginWithInvalidUserName()[pri:1, instance:automation.AdminTest.AllLoginTest@192f2f27]" name="loginWithInvalidUserName" class="automation.AdminTest.AllLoginTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Creation">
        <method signature="AreaModuleTest.areaCreation()[pri:1, instance:automation.AdminTest.AreaModuleTest@7859e786]" name="areaCreation" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="UserModuleTest.adminEnrollment(java.util.HashMap)[pri:1, instance:automation.AdminTest.UserModuleTest@54361a9]" name="adminEnrollment" class="automation.AdminTest.UserModuleTest"/>
        <method signature="UserModuleTest.cashierEnrollment(java.util.HashMap)[pri:2, instance:automation.AdminTest.UserModuleTest@54361a9]" name="cashierEnrollment" class="automation.AdminTest.UserModuleTest"/>
        <method signature="UserModuleTest.encoderEnrollment(java.util.HashMap)[pri:2, instance:automation.AdminTest.UserModuleTest@54361a9]" name="encoderEnrollment" class="automation.AdminTest.UserModuleTest"/>
        <method signature="UserModuleTest.managerEnrollment(java.util.HashMap)[pri:2, instance:automation.AdminTest.UserModuleTest@54361a9]" name="managerEnrollment" class="automation.AdminTest.UserModuleTest"/>
      </group> <!-- Creation -->
    </groups>
    <test started-at="2024-05-08T16:04:52 CST" name="Permission Test" finished-at="2024-05-08T16:09:57 CST" duration-ms="305374">
      <class name="automation.AdminTest.PermissionTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:04:52 CST" name="launchApplication" finished-at="2024-05-08T16:05:08 CST" duration-ms="15984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithActiveStatus(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:05:08 CST" name="encoderWithActiveStatus" data-provider="getData" finished-at="2024-05-08T16:05:39 CST" duration-ms="31441" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithActiveStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:05:39 CST" name="tearDown" finished-at="2024-05-08T16:05:41 CST" duration-ms="1222" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:05:41 CST" name="launchApplication" finished-at="2024-05-08T16:05:44 CST" duration-ms="3318" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method retried="true" signature="encoderWithAllowExitToTrue(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:05:44 CST" name="encoderWithAllowExitToTrue" data-provider="getData" finished-at="2024-05-08T16:06:37 CST" duration-ms="53614" status="SKIP">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"css selector","selector":"input[placeholder='Input Parking Details']"}
  (Session info: chrome=124.0.6367.119)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5a868958f52faf12bee24c5dde4bac50, findElement {value=input[placeholder='Input Parking Details'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.119, chrome: {chromedriverVersion: 124.0.6367.91 (51df0e5e17a8..., userDataDir: C:\Users\LOCAL_~1.CAS\AppDa...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53424}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53424/devtoo..., se:cdpVersion: 124.0.6367.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5a868958f52faf12bee24c5dde4bac50]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"css selector","selector":"input[placeholder='Input Parking Details']"}
  (Session info: chrome=124.0.6367.119)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [5a868958f52faf12bee24c5dde4bac50, findElement {value=input[placeholder='Input Parking Details'], using=css selector}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 124.0.6367.119, chrome: {chromedriverVersion: 124.0.6367.91 (51df0e5e17a8..., userDataDir: C:\Users\LOCAL_~1.CAS\AppDa...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53424}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53424/devtoo..., se:cdpVersion: 124.0.6367.119, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 5a868958f52faf12bee24c5dde4bac50
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:134)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:356)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:350)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy16.sendKeys(Unknown Source)
at automation.PageObject.Permissions.validateButtonIsDisplayed(Permissions.java:299)
at automation.PageObject.Permissions.allowExitValidation(Permissions.java:284)
at automation.AdminTest.PermissionTest.encoderWithAllowExitToTrue(PermissionTest.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithAllowExitToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:06:37 CST" name="tearDown" finished-at="2024-05-08T16:06:39 CST" duration-ms="1155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:06:39 CST" name="launchApplication" finished-at="2024-05-08T16:06:42 CST" duration-ms="3640" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithAllowExitToTrue(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:06:42 CST" name="encoderWithAllowExitToTrue" data-provider="getData" finished-at="2024-05-08T16:07:10 CST" duration-ms="27310" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithAllowExitToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:07:10 CST" name="tearDown" finished-at="2024-05-08T16:07:11 CST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:07:11 CST" name="launchApplication" finished-at="2024-05-08T16:07:14 CST" duration-ms="3183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithCaptureVehicleSetToTrue(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:07:14 CST" name="encoderWithCaptureVehicleSetToTrue" data-provider="getData" finished-at="2024-05-08T16:07:48 CST" duration-ms="33885" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithCaptureVehicleSetToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:07:48 CST" name="tearDown" finished-at="2024-05-08T16:07:49 CST" duration-ms="1168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:07:49 CST" name="launchApplication" finished-at="2024-05-08T16:07:52 CST" duration-ms="3268" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithNoRole(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:07:52 CST" name="encoderWithNoRole" data-provider="getData" finished-at="2024-05-08T16:08:17 CST" duration-ms="24547" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithNoRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:08:17 CST" name="tearDown" finished-at="2024-05-08T16:08:18 CST" duration-ms="1179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:08:18 CST" name="launchApplication" finished-at="2024-05-08T16:08:21 CST" duration-ms="3273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithPaymentAcceptanceSetToTrue(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:08:21 CST" name="encoderWithPaymentAcceptanceSetToTrue" data-provider="getData" finished-at="2024-05-08T16:08:47 CST" duration-ms="25756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithPaymentAcceptanceSetToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:08:47 CST" name="tearDown" finished-at="2024-05-08T16:08:48 CST" duration-ms="1199" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:08:48 CST" name="launchApplication" finished-at="2024-05-08T16:08:51 CST" duration-ms="3218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithRestrictedStatusDesktopLogin(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:08:51 CST" name="encoderWithRestrictedStatusDesktopLogin" data-provider="getData" finished-at="2024-05-08T16:09:15 CST" duration-ms="23040" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithRestrictedStatusDesktopLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:15 CST" name="tearDown" finished-at="2024-05-08T16:09:16 CST" duration-ms="1210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:16 CST" name="launchApplication" finished-at="2024-05-08T16:09:19 CST" duration-ms="3378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderWithRestrictedStatusMobileAppLogin(java.util.HashMap)[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:19 CST" name="encoderWithRestrictedStatusMobileAppLogin" data-provider="getData" finished-at="2024-05-08T16:09:39 CST" duration-ms="20107" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderWithRestrictedStatusMobileAppLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:39 CST" name="tearDown" finished-at="2024-05-08T16:09:40 CST" duration-ms="1232" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:40 CST" name="launchApplication" finished-at="2024-05-08T16:09:44 CST" duration-ms="3073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="adminWithRestrictedStatus(java.util.HashMap)[pri:1, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:44 CST" name="adminWithRestrictedStatus" data-provider="getData" finished-at="2024-05-08T16:09:56 CST" duration-ms="12168" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminWithRestrictedStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@3d08f3f5]" started-at="2024-05-08T16:09:56 CST" name="tearDown" finished-at="2024-05-08T16:09:57 CST" duration-ms="1186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.PermissionTest -->
    </test> <!-- Permission Test -->
    <test started-at="2024-05-08T16:09:57 CST" name="Filter And Search Test" finished-at="2024-05-08T16:12:00 CST" duration-ms="122766">
      <class name="automation.AdminTest.FilterAndSearchTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:09:57 CST" name="launchApplication" finished-at="2024-05-08T16:10:03 CST" duration-ms="5625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="filterByAdminRole()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:03 CST" name="filterByAdminRole" finished-at="2024-05-08T16:10:14 CST" duration-ms="11850" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAdminRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:14 CST" name="tearDown" finished-at="2024-05-08T16:10:16 CST" duration-ms="1174" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:16 CST" name="launchApplication" finished-at="2024-05-08T16:10:25 CST" duration-ms="9156" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="filterByEncoderRole()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:25 CST" name="filterByEncoderRole" finished-at="2024-05-08T16:10:41 CST" duration-ms="16674" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByEncoderRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:41 CST" name="tearDown" finished-at="2024-05-08T16:10:43 CST" duration-ms="1137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:43 CST" name="launchApplication" finished-at="2024-05-08T16:10:46 CST" duration-ms="3378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkingAreaCodeSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:10:46 CST" name="parkingAreaCodeSearch" finished-at="2024-05-08T16:11:00 CST" duration-ms="13960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingAreaCodeSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:00 CST" name="tearDown" finished-at="2024-05-08T16:11:01 CST" duration-ms="1135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:01 CST" name="launchApplication" finished-at="2024-05-08T16:11:04 CST" duration-ms="3363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkingNameSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:04 CST" name="parkingNameSearch" finished-at="2024-05-08T16:11:18 CST" duration-ms="13916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:18 CST" name="tearDown" finished-at="2024-05-08T16:11:19 CST" duration-ms="1145" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:19 CST" name="launchApplication" finished-at="2024-05-08T16:11:23 CST" duration-ms="3264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEmailSearch()[pri:1, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:23 CST" name="userEmailSearch" finished-at="2024-05-08T16:11:31 CST" duration-ms="7863" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEmailSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:31 CST" name="tearDown" finished-at="2024-05-08T16:11:32 CST" duration-ms="1148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:32 CST" name="launchApplication" finished-at="2024-05-08T16:11:35 CST" duration-ms="3196" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userFirstNameSearch()[pri:2, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:35 CST" name="userFirstNameSearch" finished-at="2024-05-08T16:11:43 CST" duration-ms="8217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userFirstNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:43 CST" name="tearDown" finished-at="2024-05-08T16:11:44 CST" duration-ms="1183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:44 CST" name="launchApplication" finished-at="2024-05-08T16:11:51 CST" duration-ms="6210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userLastNameSearch()[pri:3, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:51 CST" name="userLastNameSearch" finished-at="2024-05-08T16:11:59 CST" duration-ms="8012" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLastNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@4b6579e8]" started-at="2024-05-08T16:11:59 CST" name="tearDown" finished-at="2024-05-08T16:12:00 CST" duration-ms="1143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.FilterAndSearchTest -->
    </test> <!-- Filter And Search Test -->
    <test started-at="2024-05-08T16:12:00 CST" name="Parking Area Module Test" finished-at="2024-05-08T16:18:20 CST" duration-ms="380157">
      <class name="automation.AdminTest.AreaModuleTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:00 CST" name="launchApplication" finished-at="2024-05-08T16:12:03 CST" duration-ms="3272" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaCodeDupValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:03 CST" name="areaCodeDupValidation" finished-at="2024-05-08T16:12:23 CST" duration-ms="19837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaCodeDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:23 CST" name="tearDown" finished-at="2024-05-08T16:12:24 CST" duration-ms="1151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:24 CST" name="launchApplication" finished-at="2024-05-08T16:12:27 CST" duration-ms="3239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaNameDupValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:27 CST" name="areaNameDupValidation" finished-at="2024-05-08T16:12:52 CST" duration-ms="24699" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaNameDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:52 CST" name="tearDown" finished-at="2024-05-08T16:12:53 CST" duration-ms="1162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:53 CST" name="launchApplication" finished-at="2024-05-08T16:12:57 CST" duration-ms="3386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaPagePagenation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:12:57 CST" name="areaPagePagenation" finished-at="2024-05-08T16:13:18 CST" duration-ms="21073" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaPagePagenation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:13:18 CST" name="tearDown" finished-at="2024-05-08T16:13:19 CST" duration-ms="1143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:13:19 CST" name="launchApplication" finished-at="2024-05-08T16:13:22 CST" duration-ms="3186" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaPageSelectRow()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:13:22 CST" name="areaPageSelectRow" finished-at="2024-05-08T16:13:48 CST" duration-ms="26480" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaPageSelectRow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:13:48 CST" name="tearDown" finished-at="2024-05-08T16:13:50 CST" duration-ms="1177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:13:50 CST" name="launchApplication" finished-at="2024-05-08T16:13:53 CST" duration-ms="3250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="carCapacityInputValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:13:53 CST" name="carCapacityInputValidation" finished-at="2024-05-08T16:14:09 CST" duration-ms="16436" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carCapacityInputValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:09 CST" name="tearDown" finished-at="2024-05-08T16:14:10 CST" duration-ms="1131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:10 CST" name="launchApplication" finished-at="2024-05-08T16:14:14 CST" duration-ms="3173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="exitCreationAlert()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:14 CST" name="exitCreationAlert" finished-at="2024-05-08T16:14:32 CST" duration-ms="18540" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitCreationAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:32 CST" name="tearDown" finished-at="2024-05-08T16:14:33 CST" duration-ms="1198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:33 CST" name="launchApplication" finished-at="2024-05-08T16:14:37 CST" duration-ms="3308" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="fixedRateMaxLimit()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:37 CST" name="fixedRateMaxLimit" finished-at="2024-05-08T16:14:59 CST" duration-ms="22333" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fixedRateMaxLimit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:14:59 CST" name="tearDown" finished-at="2024-05-08T16:15:00 CST" duration-ms="1173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:00 CST" name="launchApplication" finished-at="2024-05-08T16:15:07 CST" duration-ms="6704" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="motorcycleCapacityInputValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:07 CST" name="motorcycleCapacityInputValidation" finished-at="2024-05-08T16:15:22 CST" duration-ms="15314" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- motorcycleCapacityInputValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:22 CST" name="tearDown" finished-at="2024-05-08T16:15:23 CST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:23 CST" name="launchApplication" finished-at="2024-05-08T16:15:32 CST" duration-ms="8301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCMotorcycleCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:32 CST" name="setCMotorcycleCapacityPlusButtonToDisable" finished-at="2024-05-08T16:15:52 CST" duration-ms="20838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCMotorcycleCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:52 CST" name="tearDown" finished-at="2024-05-08T16:15:54 CST" duration-ms="1134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:54 CST" name="launchApplication" finished-at="2024-05-08T16:15:57 CST" duration-ms="3411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCarCapacityMinusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:15:57 CST" name="setCarCapacityMinusButtonToDisable" finished-at="2024-05-08T16:16:14 CST" duration-ms="17209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarCapacityMinusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:14 CST" name="tearDown" finished-at="2024-05-08T16:16:15 CST" duration-ms="1139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:15 CST" name="launchApplication" finished-at="2024-05-08T16:16:18 CST" duration-ms="3124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCarCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:18 CST" name="setCarCapacityPlusButtonToDisable" finished-at="2024-05-08T16:16:35 CST" duration-ms="16481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:35 CST" name="tearDown" finished-at="2024-05-08T16:16:36 CST" duration-ms="1166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:36 CST" name="launchApplication" finished-at="2024-05-08T16:16:42 CST" duration-ms="6090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setMotorcycleCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:42 CST" name="setMotorcycleCapacityPlusButtonToDisable" finished-at="2024-05-08T16:16:59 CST" duration-ms="17253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMotorcycleCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:16:59 CST" name="tearDown" finished-at="2024-05-08T16:17:01 CST" duration-ms="1177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:17:01 CST" name="launchApplication" finished-at="2024-05-08T16:17:04 CST" duration-ms="3378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="validateUpdateParkingArea()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:17:04 CST" name="validateUpdateParkingArea" finished-at="2024-05-08T16:17:26 CST" duration-ms="22323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateUpdateParkingArea -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:17:26 CST" name="tearDown" finished-at="2024-05-08T16:17:28 CST" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:17:28 CST" name="launchApplication" finished-at="2024-05-08T16:17:31 CST" duration-ms="3289" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaCreation()[pri:1, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:17:31 CST" name="areaCreation" finished-at="2024-05-08T16:18:19 CST" duration-ms="47960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaCreation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@7859e786]" started-at="2024-05-08T16:18:19 CST" name="tearDown" finished-at="2024-05-08T16:18:20 CST" duration-ms="1166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.AreaModuleTest -->
    </test> <!-- Parking Area Module Test -->
    <test started-at="2024-05-08T16:18:20 CST" name="User Module Test" finished-at="2024-05-08T16:23:38 CST" duration-ms="317533">
      <class name="automation.AdminTest.UserModuleTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:18:20 CST" name="launchApplication" finished-at="2024-05-08T16:18:23 CST" duration-ms="3160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="exitEnrollmentAlert(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:18:23 CST" name="exitEnrollmentAlert" data-provider="getData" finished-at="2024-05-08T16:18:39 CST" duration-ms="15384" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitEnrollmentAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:18:39 CST" name="tearDown" finished-at="2024-05-08T16:18:40 CST" duration-ms="1206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:18:40 CST" name="launchApplication" finished-at="2024-05-08T16:18:43 CST" duration-ms="3365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="getCopyUserName(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:18:43 CST" name="getCopyUserName" data-provider="getData" finished-at="2024-05-08T16:19:01 CST" duration-ms="18237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCopyUserName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:01 CST" name="tearDown" finished-at="2024-05-08T16:19:02 CST" duration-ms="1143" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:02 CST" name="launchApplication" finished-at="2024-05-08T16:19:06 CST" duration-ms="3031" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="getCopyUserPassword(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:06 CST" name="getCopyUserPassword" data-provider="getData" finished-at="2024-05-08T16:19:21 CST" duration-ms="15372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCopyUserPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:21 CST" name="tearDown" finished-at="2024-05-08T16:19:22 CST" duration-ms="1166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:22 CST" name="launchApplication" finished-at="2024-05-08T16:19:25 CST" duration-ms="3328" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEmailDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:25 CST" name="userEmailDupValidation" data-provider="getData" finished-at="2024-05-08T16:19:42 CST" duration-ms="16618" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEmailDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:42 CST" name="tearDown" finished-at="2024-05-08T16:19:43 CST" duration-ms="1170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:43 CST" name="launchApplication" finished-at="2024-05-08T16:19:47 CST" duration-ms="3340" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userPagePagenation()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:19:47 CST" name="userPagePagenation" finished-at="2024-05-08T16:20:08 CST" duration-ms="21019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPagePagenation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:20:08 CST" name="tearDown" finished-at="2024-05-08T16:20:09 CST" duration-ms="1164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:20:09 CST" name="launchApplication" finished-at="2024-05-08T16:20:15 CST" duration-ms="6256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userPageSelectRow()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:20:15 CST" name="userPageSelectRow" finished-at="2024-05-08T16:20:42 CST" duration-ms="26678" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPageSelectRow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:20:42 CST" name="tearDown" finished-at="2024-05-08T16:20:43 CST" duration-ms="1173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:20:43 CST" name="launchApplication" finished-at="2024-05-08T16:20:46 CST" duration-ms="2957" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="adminEnrollment(java.util.HashMap)[pri:1, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:20:46 CST" name="adminEnrollment" data-provider="getData" finished-at="2024-05-08T16:21:22 CST" duration-ms="36163" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:21:22 CST" name="tearDown" finished-at="2024-05-08T16:21:23 CST" duration-ms="1183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:21:23 CST" name="launchApplication" finished-at="2024-05-08T16:21:27 CST" duration-ms="3582" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="cashierEnrollment(java.util.HashMap)[pri:2, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:21:27 CST" name="cashierEnrollment" data-provider="getData" finished-at="2024-05-08T16:22:00 CST" duration-ms="33115" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cashierEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:22:00 CST" name="tearDown" finished-at="2024-05-08T16:22:01 CST" duration-ms="1159" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:22:01 CST" name="launchApplication" finished-at="2024-05-08T16:22:04 CST" duration-ms="3478" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderEnrollment(java.util.HashMap)[pri:2, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:22:04 CST" name="encoderEnrollment" data-provider="getData" finished-at="2024-05-08T16:22:37 CST" duration-ms="32653" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:22:37 CST" name="tearDown" finished-at="2024-05-08T16:22:38 CST" duration-ms="1189" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:22:38 CST" name="launchApplication" finished-at="2024-05-08T16:22:41 CST" duration-ms="3171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="managerEnrollment(java.util.HashMap)[pri:2, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:22:41 CST" name="managerEnrollment" data-provider="getData" finished-at="2024-05-08T16:23:15 CST" duration-ms="33211" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- managerEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:23:15 CST" name="tearDown" finished-at="2024-05-08T16:23:15 CST" duration-ms="353" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:23:15 CST" name="launchApplication" finished-at="2024-05-08T16:23:18 CST" duration-ms="3438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="editUserAccount(java.util.HashMap)[pri:3, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:23:18 CST" name="editUserAccount" data-provider="getData" finished-at="2024-05-08T16:23:36 CST" duration-ms="17887" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUserAccount -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@54361a9]" started-at="2024-05-08T16:23:36 CST" name="tearDown" finished-at="2024-05-08T16:23:38 CST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.UserModuleTest -->
    </test> <!-- User Module Test -->
    <test started-at="2024-05-08T16:23:38 CST" name="Configuration Module Test" finished-at="2024-05-08T16:27:57 CST" duration-ms="259140">
      <class name="automation.AdminTest.ConfigurationModuleTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:23:38 CST" name="launchApplication" finished-at="2024-05-08T16:23:41 CST" duration-ms="3317" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkerTypeEnrollment(java.util.HashMap)[pri:1, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:23:41 CST" name="parkerTypeEnrollment" data-provider="getData" finished-at="2024-05-08T16:24:17 CST" duration-ms="35679" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkerTypeEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:17 CST" name="tearDown" finished-at="2024-05-08T16:24:18 CST" duration-ms="1172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:18 CST" name="launchApplication" finished-at="2024-05-08T16:24:21 CST" duration-ms="3441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="editParkerType(java.util.HashMap)[pri:2, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:21 CST" name="editParkerType" data-provider="getData" finished-at="2024-05-08T16:24:28 CST" duration-ms="6986" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editParkerType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:28 CST" name="tearDown" finished-at="2024-05-08T16:24:29 CST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:29 CST" name="launchApplication" finished-at="2024-05-08T16:24:32 CST" duration-ms="3128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="deleteParkerType(java.util.HashMap)[pri:3, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:32 CST" name="deleteParkerType" data-provider="getData" finished-at="2024-05-08T16:24:40 CST" duration-ms="7617" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteParkerType -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:40 CST" name="tearDown" finished-at="2024-05-08T16:24:41 CST" duration-ms="1171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:41 CST" name="launchApplication" finished-at="2024-05-08T16:24:44 CST" duration-ms="3142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="deleteParkerTypeWithPricingPackage(java.util.HashMap)[pri:4, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:44 CST" name="deleteParkerTypeWithPricingPackage" data-provider="getData" finished-at="2024-05-08T16:24:53 CST" duration-ms="8100" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteParkerTypeWithPricingPackage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:53 CST" name="tearDown" finished-at="2024-05-08T16:24:54 CST" duration-ms="1155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:54 CST" name="launchApplication" finished-at="2024-05-08T16:24:57 CST" duration-ms="3113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="assignParkerToParkingArea(java.util.HashMap)[pri:5, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:24:57 CST" name="assignParkerToParkingArea" data-provider="getData" finished-at="2024-05-08T16:25:25 CST" duration-ms="27943" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignParkerToParkingArea -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:25:25 CST" name="tearDown" finished-at="2024-05-08T16:25:26 CST" duration-ms="1176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:25:26 CST" name="launchApplication" finished-at="2024-05-08T16:25:33 CST" duration-ms="6777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="assignParkerToParkingAreaWithMisMatchParkingArea(java.util.HashMap)[pri:6, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:25:33 CST" name="assignParkerToParkingAreaWithMisMatchParkingArea" data-provider="getData" finished-at="2024-05-08T16:25:43 CST" duration-ms="10054" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignParkerToParkingAreaWithMisMatchParkingArea -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:25:43 CST" name="tearDown" finished-at="2024-05-08T16:25:44 CST" duration-ms="1108" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:25:44 CST" name="launchApplication" finished-at="2024-05-08T16:25:47 CST" duration-ms="3585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="duplicateParkerTypeName(java.util.HashMap)[pri:7, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:25:47 CST" name="duplicateParkerTypeName" data-provider="getData" finished-at="2024-05-08T16:26:02 CST" duration-ms="14399" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- duplicateParkerTypeName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:02 CST" name="tearDown" finished-at="2024-05-08T16:26:03 CST" duration-ms="1160" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:03 CST" name="launchApplication" finished-at="2024-05-08T16:26:12 CST" duration-ms="8638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="duplicateParketTypeCode(java.util.HashMap)[pri:8, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:12 CST" name="duplicateParketTypeCode" data-provider="getData" finished-at="2024-05-08T16:26:30 CST" duration-ms="18745" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- duplicateParketTypeCode -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:30 CST" name="tearDown" finished-at="2024-05-08T16:26:32 CST" duration-ms="1150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:32 CST" name="launchApplication" finished-at="2024-05-08T16:26:35 CST" duration-ms="3366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="createPricingPackage(java.util.HashMap)[pri:9, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:35 CST" name="createPricingPackage" data-provider="getData" finished-at="2024-05-08T16:26:49 CST" duration-ms="14044" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createPricingPackage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:49 CST" name="tearDown" finished-at="2024-05-08T16:26:50 CST" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:50 CST" name="launchApplication" finished-at="2024-05-08T16:26:53 CST" duration-ms="3301" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="updatePricingPackageWithoutChange(java.util.HashMap)[pri:10, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:26:53 CST" name="updatePricingPackageWithoutChange" data-provider="getData" finished-at="2024-05-08T16:27:07 CST" duration-ms="13855" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePricingPackageWithoutChange -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:07 CST" name="tearDown" finished-at="2024-05-08T16:27:09 CST" duration-ms="1182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:09 CST" name="launchApplication" finished-at="2024-05-08T16:27:12 CST" duration-ms="3267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="updatePricingFeePackage(java.util.HashMap)[pri:11, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:12 CST" name="updatePricingFeePackage" data-provider="getData" finished-at="2024-05-08T16:27:26 CST" duration-ms="13964" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- updatePricingFeePackage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:26 CST" name="tearDown" finished-at="2024-05-08T16:27:27 CST" duration-ms="1167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:27 CST" name="launchApplication" finished-at="2024-05-08T16:27:30 CST" duration-ms="3213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="assignPricingFeeToParkingArea(java.util.HashMap)[pri:12, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:30 CST" name="assignPricingFeeToParkingArea" data-provider="getData" finished-at="2024-05-08T16:27:40 CST" duration-ms="9616" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- assignPricingFeeToParkingArea -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:40 CST" name="tearDown" finished-at="2024-05-08T16:27:41 CST" duration-ms="1198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:41 CST" name="launchApplication" finished-at="2024-05-08T16:27:44 CST" duration-ms="3203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="deletePricingPackage(java.util.HashMap)[pri:13, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:44 CST" name="deletePricingPackage" data-provider="getData" finished-at="2024-05-08T16:27:55 CST" duration-ms="11268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=SuperUser123!?, username=superuser}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deletePricingPackage -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.ConfigurationModuleTest@5db4c359]" started-at="2024-05-08T16:27:55 CST" name="tearDown" finished-at="2024-05-08T16:27:57 CST" duration-ms="1233" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.ConfigurationModuleTest -->
    </test> <!-- Configuration Module Test -->
    <test started-at="2024-05-08T16:27:57 CST" name="Login Test" finished-at="2024-05-08T16:28:32 CST" duration-ms="35064">
      <class name="automation.AdminTest.AllLoginTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:27:57 CST" name="launchApplication" finished-at="2024-05-08T16:28:00 CST" duration-ms="3204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:00 CST" name="loginWithAccess" finished-at="2024-05-08T16:28:06 CST" duration-ms="5754" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithAccess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:06 CST" name="tearDown" finished-at="2024-05-08T16:28:07 CST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:07 CST" name="launchApplication" finished-at="2024-05-08T16:28:10 CST" duration-ms="3616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithInvalidPassword()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:10 CST" name="loginWithInvalidPassword" finished-at="2024-05-08T16:28:15 CST" duration-ms="4988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:15 CST" name="tearDown" finished-at="2024-05-08T16:28:17 CST" duration-ms="1172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:17 CST" name="launchApplication" finished-at="2024-05-08T16:28:20 CST" duration-ms="3179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithoutAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:20 CST" name="loginWithoutAccess" finished-at="2024-05-08T16:28:23 CST" duration-ms="3050" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutAccess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:23 CST" name="tearDown" finished-at="2024-05-08T16:28:24 CST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:24 CST" name="launchApplication" finished-at="2024-05-08T16:28:27 CST" duration-ms="3288" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithInvalidUserName()[pri:1, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:27 CST" name="loginWithInvalidUserName" finished-at="2024-05-08T16:28:30 CST" duration-ms="3061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUserName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@192f2f27]" started-at="2024-05-08T16:28:30 CST" name="tearDown" finished-at="2024-05-08T16:28:32 CST" duration-ms="1297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.AllLoginTest -->
    </test> <!-- Login Test -->
  </suite> <!-- Suite -->
</testng-results>
