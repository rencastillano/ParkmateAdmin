<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="37" passed="35" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-31T19:17:08 CST" name="Suite" finished-at="2024-01-31T19:36:05 CST" duration-ms="1137191">
    <groups>
      <group name="ErrorHandling">
        <method signature="AllLoginTest.loginWithInvalidPassword()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" name="loginWithInvalidPassword" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AllLoginTest.loginWithInvalidUserName()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" name="loginWithInvalidUserName" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AllLoginTest.loginWithoutAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" name="loginWithoutAccess" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AreaCreationTest.areaCodeDupValidation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" name="areaCodeDupValidation" class="automation.AdminTest.AreaCreationTest"/>
        <method signature="AreaCreationTest.areaNameDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" name="areaNameDupValidation" class="automation.AdminTest.AreaCreationTest"/>
        <method signature="AreaCreationTest.fixedRateMaxLimit()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" name="fixedRateMaxLimit" class="automation.AdminTest.AreaCreationTest"/>
        <method signature="UserEnrollmentTest.userEmailDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" name="userEmailDupValidation" class="automation.AdminTest.UserEnrollmentTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Creation">
        <method signature="AreaCreationTest.areaCreation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" name="areaCreation" class="automation.AdminTest.AreaCreationTest"/>
        <method signature="UserEnrollmentTest.userEnrollment()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" name="userEnrollment" class="automation.AdminTest.UserEnrollmentTest"/>
      </group> <!-- Creation -->
    </groups>
    <test started-at="2024-01-31T19:17:08 CST" name="Login Test" finished-at="2024-01-31T19:18:29 CST" duration-ms="81205">
      <class name="automation.AdminTest.AllLoginTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:17:08 CST" name="launchApplication" finished-at="2024-01-31T19:17:32 CST" duration-ms="24211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:17:32 CST" name="loginWithAccess" finished-at="2024-01-31T19:17:54 CST" duration-ms="21616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithAccess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:17:54 CST" name="tearDown" finished-at="2024-01-31T19:17:55 CST" duration-ms="1184" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:17:55 CST" name="launchApplication" finished-at="2024-01-31T19:18:02 CST" duration-ms="6903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithInvalidPassword()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:02 CST" name="loginWithInvalidPassword" finished-at="2024-01-31T19:18:07 CST" duration-ms="4823" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:07 CST" name="tearDown" finished-at="2024-01-31T19:18:08 CST" duration-ms="1243" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:08 CST" name="launchApplication" finished-at="2024-01-31T19:18:15 CST" duration-ms="6682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithInvalidUserName()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:15 CST" name="loginWithInvalidUserName" finished-at="2024-01-31T19:18:18 CST" duration-ms="2896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUserName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:18 CST" name="tearDown" finished-at="2024-01-31T19:18:19 CST" duration-ms="1131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:19 CST" name="launchApplication" finished-at="2024-01-31T19:18:25 CST" duration-ms="6495" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithoutAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:25 CST" name="loginWithoutAccess" finished-at="2024-01-31T19:18:28 CST" duration-ms="2829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutAccess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-01-31T19:18:28 CST" name="tearDown" finished-at="2024-01-31T19:18:29 CST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.AllLoginTest -->
    </test> <!-- Login Test -->
    <test started-at="2024-01-31T19:18:30 CST" name="Parking Area Ceation Test" finished-at="2024-01-31T19:26:42 CST" duration-ms="491812">
      <class name="automation.AdminTest.AreaCreationTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:18:30 CST" name="launchApplication" finished-at="2024-01-31T19:18:36 CST" duration-ms="6557" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaCodeDupValidation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:18:36 CST" name="areaCodeDupValidation" finished-at="2024-01-31T19:19:06 CST" duration-ms="29758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaCodeDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:19:06 CST" name="tearDown" finished-at="2024-01-31T19:19:07 CST" duration-ms="1126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:19:07 CST" name="launchApplication" finished-at="2024-01-31T19:19:14 CST" duration-ms="6657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaCreation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:19:14 CST" name="areaCreation" finished-at="2024-01-31T19:19:48 CST" duration-ms="34167" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaCreation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:19:48 CST" name="tearDown" finished-at="2024-01-31T19:19:49 CST" duration-ms="1121" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:19:50 CST" name="launchApplication" finished-at="2024-01-31T19:19:56 CST" duration-ms="6584" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaNameDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:19:56 CST" name="areaNameDupValidation" data-provider="getData" finished-at="2024-01-31T19:20:28 CST" duration-ms="31790" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1!, mobileNumber=987654321, username=renAdmin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaNameDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:20:28 CST" name="tearDown" finished-at="2024-01-31T19:20:29 CST" duration-ms="1123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:20:29 CST" name="launchApplication" finished-at="2024-01-31T19:20:36 CST" duration-ms="6829" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaPagePagenation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:20:36 CST" name="areaPagePagenation" finished-at="2024-01-31T19:21:25 CST" duration-ms="48838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaPagePagenation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:21:25 CST" name="tearDown" finished-at="2024-01-31T19:21:26 CST" duration-ms="1139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:21:26 CST" name="launchApplication" finished-at="2024-01-31T19:21:34 CST" duration-ms="8477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaPageSelectRow()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:21:34 CST" name="areaPageSelectRow" finished-at="2024-01-31T19:22:01 CST" duration-ms="26411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaPageSelectRow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:22:01 CST" name="tearDown" finished-at="2024-01-31T19:22:02 CST" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:22:02 CST" name="launchApplication" finished-at="2024-01-31T19:22:09 CST" duration-ms="6530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="carCapacityInpuValidation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:22:09 CST" name="carCapacityInpuValidation" finished-at="2024-01-31T19:22:28 CST" duration-ms="19140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carCapacityInpuValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:22:28 CST" name="tearDown" finished-at="2024-01-31T19:22:29 CST" duration-ms="1107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:22:29 CST" name="launchApplication" finished-at="2024-01-31T19:22:40 CST" duration-ms="10949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="editParkingArea()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:22:40 CST" name="editParkingArea" finished-at="2024-01-31T19:23:08 CST" duration-ms="28650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editParkingArea -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:23:08 CST" name="tearDown" finished-at="2024-01-31T19:23:09 CST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:23:09 CST" name="launchApplication" finished-at="2024-01-31T19:23:16 CST" duration-ms="6363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="exitCreationAlert()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:23:16 CST" name="exitCreationAlert" finished-at="2024-01-31T19:23:45 CST" duration-ms="28687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitCreationAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:23:45 CST" name="tearDown" finished-at="2024-01-31T19:23:46 CST" duration-ms="1179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:23:46 CST" name="launchApplication" finished-at="2024-01-31T19:23:52 CST" duration-ms="6428" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="fixedRateMaxLimit()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:23:52 CST" name="fixedRateMaxLimit" finished-at="2024-01-31T19:24:19 CST" duration-ms="27231" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fixedRateMaxLimit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:24:19 CST" name="tearDown" finished-at="2024-01-31T19:24:20 CST" duration-ms="1119" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:24:20 CST" name="launchApplication" finished-at="2024-01-31T19:24:27 CST" duration-ms="6553" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="motorcycleCapacityInpuValidation()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:24:27 CST" name="motorcycleCapacityInpuValidation" finished-at="2024-01-31T19:24:47 CST" duration-ms="19965" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- motorcycleCapacityInpuValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:24:47 CST" name="tearDown" finished-at="2024-01-31T19:24:48 CST" duration-ms="1141" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:24:48 CST" name="launchApplication" finished-at="2024-01-31T19:24:55 CST" duration-ms="6454" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCMotorcycleCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:24:55 CST" name="setCMotorcycleCapacityPlusButtonToDisable" finished-at="2024-01-31T19:25:16 CST" duration-ms="21065" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCMotorcycleCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:25:16 CST" name="tearDown" finished-at="2024-01-31T19:25:17 CST" duration-ms="1142" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:25:17 CST" name="launchApplication" finished-at="2024-01-31T19:25:23 CST" duration-ms="6434" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCarCapacityMinusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:25:23 CST" name="setCarCapacityMinusButtonToDisable" finished-at="2024-01-31T19:25:44 CST" duration-ms="20387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarCapacityMinusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:25:44 CST" name="tearDown" finished-at="2024-01-31T19:25:45 CST" duration-ms="1144" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:25:45 CST" name="launchApplication" finished-at="2024-01-31T19:25:51 CST" duration-ms="6548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCarCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:25:51 CST" name="setCarCapacityPlusButtonToDisable" finished-at="2024-01-31T19:26:12 CST" duration-ms="20677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:26:12 CST" name="tearDown" finished-at="2024-01-31T19:26:13 CST" duration-ms="1127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:26:13 CST" name="launchApplication" finished-at="2024-01-31T19:26:20 CST" duration-ms="6479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setMotorcycleCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:26:20 CST" name="setMotorcycleCapacityPlusButtonToDisable" finished-at="2024-01-31T19:26:41 CST" duration-ms="20922" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMotorcycleCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaCreationTest@2584b82d]" started-at="2024-01-31T19:26:41 CST" name="tearDown" finished-at="2024-01-31T19:26:42 CST" duration-ms="1118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.AreaCreationTest -->
    </test> <!-- Parking Area Ceation Test -->
    <test started-at="2024-01-31T19:26:42 CST" name="User Enrollment Test" finished-at="2024-01-31T19:30:14 CST" duration-ms="211953">
      <class name="automation.AdminTest.UserEnrollmentTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:26:42 CST" name="launchApplication" finished-at="2024-01-31T19:26:48 CST" duration-ms="6731" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="editUserAccount()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:26:48 CST" name="editUserAccount" finished-at="2024-01-31T19:27:44 CST" duration-ms="55494" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@class='flex-grow text-sm self-center w-3/4']' (tried for 20 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@class='flex-grow text-sm self-center w-3/4']' (tried for 20 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at automation.AbstractComponents.AbstractComponent.waitForWebElementToAppear(AbstractComponent.java:40)
at automation.PageObject.UserEnrollment.userAccountUpdate(UserEnrollment.java:245)
at automation.AdminTest.UserEnrollmentTest.editUserAccount(UserEnrollmentTest.java:71)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@class='flex-grow text-sm self-center w-3/4']"}
  (Session info: chrome=121.0.6167.86)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [68f84661d83c5c7e2d2549c0b1683243, findElement {using=xpath, value=//*[@class='flex-grow text-sm self-center w-3/4']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.86, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\REN~1.CAS\AppData\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:53435}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:53435/devtoo..., se:cdpVersion: 121.0.6167.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 68f84661d83c5c7e2d2549c0b1683243
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy12.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:204)
... 33 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUserAccount -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:27:44 CST" name="tearDown" finished-at="2024-01-31T19:27:45 CST" duration-ms="1122" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:27:45 CST" name="launchApplication" finished-at="2024-01-31T19:27:56 CST" duration-ms="10610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="exitEnrollmentAlert()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:27:56 CST" name="exitEnrollmentAlert" finished-at="2024-01-31T19:28:14 CST" duration-ms="17873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitEnrollmentAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:28:14 CST" name="tearDown" finished-at="2024-01-31T19:28:15 CST" duration-ms="1124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:28:15 CST" name="launchApplication" finished-at="2024-01-31T19:28:21 CST" duration-ms="6381" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEmailDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:28:21 CST" name="userEmailDupValidation" data-provider="getData" finished-at="2024-01-31T19:28:42 CST" duration-ms="20802" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1!, mobileNumber=987654321, username=renAdmin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEmailDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:28:42 CST" name="tearDown" finished-at="2024-01-31T19:28:43 CST" duration-ms="1106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:28:43 CST" name="launchApplication" finished-at="2024-01-31T19:28:50 CST" duration-ms="6571" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEnrollment()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:28:50 CST" name="userEnrollment" finished-at="2024-01-31T19:29:07 CST" duration-ms="17242" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:29:07 CST" name="tearDown" finished-at="2024-01-31T19:29:08 CST" duration-ms="1105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:29:08 CST" name="launchApplication" finished-at="2024-01-31T19:29:15 CST" duration-ms="6695" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userPagePagenation()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:29:15 CST" name="userPagePagenation" finished-at="2024-01-31T19:29:39 CST" duration-ms="23795" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPagePagenation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:29:39 CST" name="tearDown" finished-at="2024-01-31T19:29:40 CST" duration-ms="1118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:29:40 CST" name="launchApplication" finished-at="2024-01-31T19:29:46 CST" duration-ms="6425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userPageSelectRow()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:29:46 CST" name="userPageSelectRow" finished-at="2024-01-31T19:30:13 CST" duration-ms="26405" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPageSelectRow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserEnrollmentTest@d23e042]" started-at="2024-01-31T19:30:13 CST" name="tearDown" finished-at="2024-01-31T19:30:14 CST" duration-ms="1118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.UserEnrollmentTest -->
    </test> <!-- User Enrollment Test -->
    <test started-at="2024-01-31T19:30:14 CST" name="Filter And Search Test" finished-at="2024-01-31T19:32:31 CST" duration-ms="136807">
      <class name="automation.AdminTest.FilterAndSearchTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:14 CST" name="launchApplication" finished-at="2024-01-31T19:30:20 CST" duration-ms="6530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="filterByAdminRole()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:20 CST" name="filterByAdminRole" finished-at="2024-01-31T19:30:32 CST" duration-ms="11963" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAdminRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:32 CST" name="tearDown" finished-at="2024-01-31T19:30:33 CST" duration-ms="1120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:33 CST" name="launchApplication" finished-at="2024-01-31T19:30:39 CST" duration-ms="5974" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="filterByEncoderRole()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:39 CST" name="filterByEncoderRole" finished-at="2024-01-31T19:30:51 CST" duration-ms="11867" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByEncoderRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:51 CST" name="tearDown" finished-at="2024-01-31T19:30:52 CST" duration-ms="1106" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:52 CST" name="launchApplication" finished-at="2024-01-31T19:30:59 CST" duration-ms="6479" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkingAreaCodeSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:30:59 CST" name="parkingAreaCodeSearch" finished-at="2024-01-31T19:31:13 CST" duration-ms="14463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingAreaCodeSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:13 CST" name="tearDown" finished-at="2024-01-31T19:31:14 CST" duration-ms="1095" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:14 CST" name="launchApplication" finished-at="2024-01-31T19:31:21 CST" duration-ms="6486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkingNameSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:21 CST" name="parkingNameSearch" finished-at="2024-01-31T19:31:33 CST" duration-ms="12323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:33 CST" name="tearDown" finished-at="2024-01-31T19:31:34 CST" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:34 CST" name="launchApplication" finished-at="2024-01-31T19:31:41 CST" duration-ms="6581" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEmailSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:41 CST" name="userEmailSearch" finished-at="2024-01-31T19:31:52 CST" duration-ms="10901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEmailSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:52 CST" name="tearDown" finished-at="2024-01-31T19:31:53 CST" duration-ms="1138" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:53 CST" name="launchApplication" finished-at="2024-01-31T19:31:59 CST" duration-ms="6442" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userLastNameSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:31:59 CST" name="userLastNameSearch" finished-at="2024-01-31T19:32:11 CST" duration-ms="11078" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLastNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:32:11 CST" name="tearDown" finished-at="2024-01-31T19:32:12 CST" duration-ms="1132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:32:12 CST" name="launchApplication" finished-at="2024-01-31T19:32:18 CST" duration-ms="6489" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userNameSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:32:18 CST" name="userNameSearch" finished-at="2024-01-31T19:32:30 CST" duration-ms="11397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@d2de489]" started-at="2024-01-31T19:32:30 CST" name="tearDown" finished-at="2024-01-31T19:32:31 CST" duration-ms="1128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.FilterAndSearchTest -->
    </test> <!-- Filter And Search Test -->
    <test started-at="2024-01-31T19:32:31 CST" name="Permission Test" finished-at="2024-01-31T19:36:05 CST" duration-ms="214358">
      <class name="automation.AdminTest.PermissionTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:32:31 CST" name="launchApplication" finished-at="2024-01-31T19:32:37 CST" duration-ms="6547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setAllowExitToFalse()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:32:37 CST" name="setAllowExitToFalse" finished-at="2024-01-31T19:33:24 CST" duration-ms="46338" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllowExitToFalse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:33:24 CST" name="tearDown" finished-at="2024-01-31T19:33:25 CST" duration-ms="1112" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:33:25 CST" name="launchApplication" finished-at="2024-01-31T19:33:35 CST" duration-ms="10418" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setAllowExitToTrue()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:33:35 CST" name="setAllowExitToTrue" finished-at="2024-01-31T19:34:06 CST" duration-ms="30907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllowExitToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:34:06 CST" name="tearDown" finished-at="2024-01-31T19:34:07 CST" duration-ms="1129" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:34:07 CST" name="launchApplication" finished-at="2024-01-31T19:34:14 CST" duration-ms="6691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithActiveStatus()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:34:14 CST" name="userWithActiveStatus" finished-at="2024-01-31T19:34:38 CST" duration-ms="24192" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithActiveStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:34:38 CST" name="tearDown" finished-at="2024-01-31T19:34:39 CST" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:34:39 CST" name="launchApplication" finished-at="2024-01-31T19:34:46 CST" duration-ms="6324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithPaymentAcceptanceSetToFalse()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:34:46 CST" name="userWithPaymentAcceptanceSetToFalse" finished-at="2024-01-31T19:35:08 CST" duration-ms="21977" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithPaymentAcceptanceSetToFalse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:35:08 CST" name="tearDown" finished-at="2024-01-31T19:35:09 CST" duration-ms="1149" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:35:09 CST" name="launchApplication" finished-at="2024-01-31T19:35:15 CST" duration-ms="6400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithPaymentAcceptanceSetToTrue()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:35:15 CST" name="userWithPaymentAcceptanceSetToTrue" finished-at="2024-01-31T19:35:42 CST" duration-ms="27357" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithPaymentAcceptanceSetToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:35:42 CST" name="tearDown" finished-at="2024-01-31T19:35:44 CST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:35:44 CST" name="launchApplication" finished-at="2024-01-31T19:35:50 CST" duration-ms="6331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithRestrictedStatus()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:35:50 CST" name="userWithRestrictedStatus" finished-at="2024-01-31T19:36:04 CST" duration-ms="13950" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="btn w-[85px] mr-auto text-sm text-white uppercase bg-sm-electric-blue font-henry-sans-semibold">...</button> is not clickable at point (816, 495). Other element would receive the click: <div class="card lg:w-3/12 sm:9/12 px-12 py-[50px] shadow text-center rounded-lg bg-white">...</div>
  (Session info: chrome=121.0.6167.86)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [709a36a3a5de6e6e8be8da9d90227264, clickElement {id=2806E651AB327A5AC39F9388C0056971_element_133}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.86, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\REN~1.CAS\AppData\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54956}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54956/devtoo..., se:cdpVersion: 121.0.6167.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (709a36a3a5de6e6e8be8da9d90227264)] -> xpath: //*[text()='Proceed']]
Session ID: 709a36a3a5de6e6e8be8da9d90227264]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="btn w-[85px] mr-auto text-sm text-white uppercase bg-sm-electric-blue font-henry-sans-semibold">...</button> is not clickable at point (816, 495). Other element would receive the click: <div class="card lg:w-3/12 sm:9/12 px-12 py-[50px] shadow text-center rounded-lg bg-white">...</div>
  (Session info: chrome=121.0.6167.86)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [709a36a3a5de6e6e8be8da9d90227264, clickElement {id=2806E651AB327A5AC39F9388C0056971_element_133}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 121.0.6167.86, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\REN~1.CAS\AppData\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54956}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54956/devtoo..., se:cdpVersion: 121.0.6167.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (709a36a3a5de6e6e8be8da9d90227264)] -> xpath: //*[text()='Proceed']]
Session ID: 709a36a3a5de6e6e8be8da9d90227264
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy12.click(Unknown Source)
at automation.PageObject.Permissions.setUserStatus(Permissions.java:157)
at automation.PageObject.Permissions.setStatusToRestricted(Permissions.java:121)
at automation.AdminTest.PermissionTest.userWithRestrictedStatus(PermissionTest.java:19)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithRestrictedStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@508dec2b]" started-at="2024-01-31T19:36:04 CST" name="tearDown" finished-at="2024-01-31T19:36:05 CST" duration-ms="1101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.PermissionTest -->
    </test> <!-- Permission Test -->
  </suite> <!-- Suite -->
</testng-results>
