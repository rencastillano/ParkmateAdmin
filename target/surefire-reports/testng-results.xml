<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="40" passed="39" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-02-05T16:58:32 CST" name="Suite" finished-at="2024-02-05T17:14:03 CST" duration-ms="930738">
    <groups>
      <group name="ErrorHandling">
        <method signature="AllLoginTest.loginWithInvalidPassword()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" name="loginWithInvalidPassword" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AllLoginTest.loginWithInvalidUserName()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" name="loginWithInvalidUserName" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AllLoginTest.loginWithoutAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" name="loginWithoutAccess" class="automation.AdminTest.AllLoginTest"/>
        <method signature="AreaModuleTest.areaCodeDupValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" name="areaCodeDupValidation" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="AreaModuleTest.areaNameDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" name="areaNameDupValidation" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="AreaModuleTest.fixedRateMaxLimit()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" name="fixedRateMaxLimit" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="UserModuleTest.userEmailDupValidation()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" name="userEmailDupValidation" class="automation.AdminTest.UserModuleTest"/>
      </group> <!-- ErrorHandling -->
      <group name="Creation">
        <method signature="AreaModuleTest.areaCreation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" name="areaCreation" class="automation.AdminTest.AreaModuleTest"/>
        <method signature="UserModuleTest.adminEnrollment()[pri:1, instance:automation.AdminTest.UserModuleTest@14dd7b39]" name="adminEnrollment" class="automation.AdminTest.UserModuleTest"/>
        <method signature="UserModuleTest.encoderEnrollment()[pri:2, instance:automation.AdminTest.UserModuleTest@14dd7b39]" name="encoderEnrollment" class="automation.AdminTest.UserModuleTest"/>
      </group> <!-- Creation -->
    </groups>
    <test started-at="2024-02-05T16:58:32 CST" name="Login Test" finished-at="2024-02-05T16:59:27 CST" duration-ms="54384">
      <class name="automation.AdminTest.AllLoginTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:58:33 CST" name="launchApplication" finished-at="2024-02-05T16:58:46 CST" duration-ms="13537" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:58:46 CST" name="loginWithAccess" finished-at="2024-02-05T16:59:06 CST" duration-ms="20290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithAccess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:06 CST" name="tearDown" finished-at="2024-02-05T16:59:07 CST" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:07 CST" name="launchApplication" finished-at="2024-02-05T16:59:09 CST" duration-ms="2424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithInvalidPassword()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:09 CST" name="loginWithInvalidPassword" finished-at="2024-02-05T16:59:14 CST" duration-ms="4669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:14 CST" name="tearDown" finished-at="2024-02-05T16:59:15 CST" duration-ms="772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:15 CST" name="launchApplication" finished-at="2024-02-05T16:59:18 CST" duration-ms="2627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithInvalidUserName()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:18 CST" name="loginWithInvalidUserName" finished-at="2024-02-05T16:59:20 CST" duration-ms="2709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithInvalidUserName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:20 CST" name="tearDown" finished-at="2024-02-05T16:59:21 CST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:21 CST" name="launchApplication" finished-at="2024-02-05T16:59:23 CST" duration-ms="2475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="loginWithoutAccess()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:23 CST" name="loginWithoutAccess" finished-at="2024-02-05T16:59:26 CST" duration-ms="2777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginWithoutAccess -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AllLoginTest@76494737]" started-at="2024-02-05T16:59:26 CST" name="tearDown" finished-at="2024-02-05T16:59:27 CST" duration-ms="646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.AllLoginTest -->
    </test> <!-- Login Test -->
    <test started-at="2024-02-05T16:59:28 CST" name="Parking Area Module Test" finished-at="2024-02-05T17:05:23 CST" duration-ms="355184">
      <class name="automation.AdminTest.AreaModuleTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T16:59:28 CST" name="launchApplication" finished-at="2024-02-05T16:59:30 CST" duration-ms="2517" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaCodeDupValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T16:59:30 CST" name="areaCodeDupValidation" finished-at="2024-02-05T16:59:52 CST" duration-ms="21715" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaCodeDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T16:59:52 CST" name="tearDown" finished-at="2024-02-05T16:59:53 CST" duration-ms="852" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T16:59:53 CST" name="launchApplication" finished-at="2024-02-05T16:59:55 CST" duration-ms="2459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaCreation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T16:59:55 CST" name="areaCreation" finished-at="2024-02-05T17:00:28 CST" duration-ms="32935" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaCreation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:00:28 CST" name="tearDown" finished-at="2024-02-05T17:00:29 CST" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:00:29 CST" name="launchApplication" finished-at="2024-02-05T17:00:32 CST" duration-ms="2241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaNameDupValidation(java.util.HashMap)[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:00:32 CST" name="areaNameDupValidation" data-provider="getData" finished-at="2024-02-05T17:00:57 CST" duration-ms="25763" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1!, mobileNumber=987654321, username=renAdmin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaNameDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:00:57 CST" name="tearDown" finished-at="2024-02-05T17:00:58 CST" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:00:58 CST" name="launchApplication" finished-at="2024-02-05T17:01:01 CST" duration-ms="2494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaPagePagenation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:01 CST" name="areaPagePagenation" finished-at="2024-02-05T17:01:25 CST" duration-ms="23924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaPagePagenation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:25 CST" name="tearDown" finished-at="2024-02-05T17:01:26 CST" duration-ms="797" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:26 CST" name="launchApplication" finished-at="2024-02-05T17:01:28 CST" duration-ms="2578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="areaPageSelectRow()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:28 CST" name="areaPageSelectRow" finished-at="2024-02-05T17:01:54 CST" duration-ms="26281" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- areaPageSelectRow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:54 CST" name="tearDown" finished-at="2024-02-05T17:01:55 CST" duration-ms="631" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:55 CST" name="launchApplication" finished-at="2024-02-05T17:01:57 CST" duration-ms="2209" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="carCapacityInputValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:01:57 CST" name="carCapacityInputValidation" finished-at="2024-02-05T17:02:13 CST" duration-ms="15984" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carCapacityInputValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:02:13 CST" name="tearDown" finished-at="2024-02-05T17:02:14 CST" duration-ms="903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:02:14 CST" name="launchApplication" finished-at="2024-02-05T17:02:16 CST" duration-ms="2321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="exitCreationAlert()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:02:16 CST" name="exitCreationAlert" finished-at="2024-02-05T17:02:36 CST" duration-ms="19500" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitCreationAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:02:36 CST" name="tearDown" finished-at="2024-02-05T17:02:37 CST" duration-ms="810" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:02:37 CST" name="launchApplication" finished-at="2024-02-05T17:02:39 CST" duration-ms="2462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="fixedRateMaxLimit()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:02:39 CST" name="fixedRateMaxLimit" finished-at="2024-02-05T17:03:03 CST" duration-ms="23552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fixedRateMaxLimit -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:03 CST" name="tearDown" finished-at="2024-02-05T17:03:04 CST" duration-ms="896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:04 CST" name="launchApplication" finished-at="2024-02-05T17:03:06 CST" duration-ms="2504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="motorcycleCapacityInputValidation()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:06 CST" name="motorcycleCapacityInputValidation" finished-at="2024-02-05T17:03:22 CST" duration-ms="15625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- motorcycleCapacityInputValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:22 CST" name="tearDown" finished-at="2024-02-05T17:03:23 CST" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:23 CST" name="launchApplication" finished-at="2024-02-05T17:03:25 CST" duration-ms="2457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCMotorcycleCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:25 CST" name="setCMotorcycleCapacityPlusButtonToDisable" finished-at="2024-02-05T17:03:43 CST" duration-ms="17507" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCMotorcycleCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:43 CST" name="tearDown" finished-at="2024-02-05T17:03:44 CST" duration-ms="891" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:44 CST" name="launchApplication" finished-at="2024-02-05T17:03:51 CST" duration-ms="6941" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCarCapacityMinusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:03:51 CST" name="setCarCapacityMinusButtonToDisable" finished-at="2024-02-05T17:04:10 CST" duration-ms="19828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarCapacityMinusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:10 CST" name="tearDown" finished-at="2024-02-05T17:04:11 CST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:11 CST" name="launchApplication" finished-at="2024-02-05T17:04:14 CST" duration-ms="2429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setCarCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:14 CST" name="setCarCapacityPlusButtonToDisable" finished-at="2024-02-05T17:04:36 CST" duration-ms="22780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCarCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:36 CST" name="tearDown" finished-at="2024-02-05T17:04:37 CST" duration-ms="814" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:37 CST" name="launchApplication" finished-at="2024-02-05T17:04:40 CST" duration-ms="2398" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setMotorcycleCapacityPlusButtonToDisable()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:40 CST" name="setMotorcycleCapacityPlusButtonToDisable" finished-at="2024-02-05T17:04:58 CST" duration-ms="18126" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setMotorcycleCapacityPlusButtonToDisable -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:58 CST" name="tearDown" finished-at="2024-02-05T17:04:59 CST" duration-ms="896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:04:59 CST" name="launchApplication" finished-at="2024-02-05T17:05:01 CST" duration-ms="2311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="validateEditParkingArea()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:05:01 CST" name="validateEditParkingArea" finished-at="2024-02-05T17:05:22 CST" duration-ms="20999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateEditParkingArea -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.AreaModuleTest@2584b82d]" started-at="2024-02-05T17:05:22 CST" name="tearDown" finished-at="2024-02-05T17:05:23 CST" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.AreaModuleTest -->
    </test> <!-- Parking Area Module Test -->
    <test started-at="2024-02-05T17:05:23 CST" name="User Module Test" finished-at="2024-02-05T17:09:12 CST" duration-ms="229462">
      <class name="automation.AdminTest.UserModuleTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:23 CST" name="launchApplication" finished-at="2024-02-05T17:05:25 CST" duration-ms="2389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="exitEnrollmentAlert()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:25 CST" name="exitEnrollmentAlert" finished-at="2024-02-05T17:05:38 CST" duration-ms="12888" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button type="button" class="w-full flex justify-start bg-white text-sm-default border font-henry-sans-light text-sm border-[#CED3DD] text-[#000000] py-2 px-4 rounded-lg">...</button> is not clickable at point (1134, 601). Other element would receive the click: <div class="modal-transition w-full h-full p-4 overflow-y-auto flex justify-center items-center" style="">...</div>
  (Session info: chrome-headless-shell=121.0.6167.140)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ad838e804696f581c8817bfb244acb49, clickElement {id=F65C4EAF12F4DE4596048F17AB84E351_element_82}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\REN~1.CAS\AppData\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55282}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55282/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome-headless-shell on windows (ad838e804696f581c8817bfb244acb49)] -> css selector: div:nth-child(4) > div > div > button]
Session ID: ad838e804696f581c8817bfb244acb49]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button type="button" class="w-full flex justify-start bg-white text-sm-default border font-henry-sans-light text-sm border-[#CED3DD] text-[#000000] py-2 px-4 rounded-lg">...</button> is not clickable at point (1134, 601). Other element would receive the click: <div class="modal-transition w-full h-full p-4 overflow-y-auto flex justify-center items-center" style="">...</div>
  (Session info: chrome-headless-shell=121.0.6167.140)
Build info: version: '4.17.0', revision: 'e52b1be057*'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ad838e804696f581c8817bfb244acb49, clickElement {id=F65C4EAF12F4DE4596048F17AB84E351_element_82}]
Capabilities {acceptInsecureCerts: false, browserName: chrome-headless-shell, browserVersion: 121.0.6167.140, chrome: {chromedriverVersion: 121.0.6167.85 (3f98d690ad7e..., userDataDir: C:\Users\REN~1.CAS\AppData\...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55282}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55282/devtoo..., se:cdpVersion: 121.0.6167.140, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome-headless-shell on windows (ad838e804696f581c8817bfb244acb49)] -> css selector: div:nth-child(4) > div > div > button]
Session ID: ad838e804696f581c8817bfb244acb49
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:185)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:134)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:51)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:519)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:223)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:76)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy12.click(Unknown Source)
at automation.PageObject.UserModule.getParkingStation(UserModule.java:265)
at automation.PageObject.UserModule.exitEnrollmentAlert(UserModule.java:305)
at automation.AdminTest.UserModuleTest.exitEnrollmentAlert(UserModuleTest.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- exitEnrollmentAlert -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:38 CST" name="tearDown" finished-at="2024-02-05T17:05:39 CST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:39 CST" name="launchApplication" finished-at="2024-02-05T17:05:42 CST" duration-ms="2538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="getCopyUserName()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:42 CST" name="getCopyUserName" finished-at="2024-02-05T17:05:59 CST" duration-ms="16858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCopyUserName -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:59 CST" name="tearDown" finished-at="2024-02-05T17:05:59 CST" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:05:59 CST" name="launchApplication" finished-at="2024-02-05T17:06:02 CST" duration-ms="2470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="getCopyUserPassword()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:02 CST" name="getCopyUserPassword" finished-at="2024-02-05T17:06:18 CST" duration-ms="16027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getCopyUserPassword -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:18 CST" name="tearDown" finished-at="2024-02-05T17:06:19 CST" duration-ms="828" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:19 CST" name="launchApplication" finished-at="2024-02-05T17:06:21 CST" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEmailDupValidation()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:21 CST" name="userEmailDupValidation" finished-at="2024-02-05T17:06:39 CST" duration-ms="17966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEmailDupValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:39 CST" name="tearDown" finished-at="2024-02-05T17:06:40 CST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:40 CST" name="launchApplication" finished-at="2024-02-05T17:06:42 CST" duration-ms="2363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userPagePagenation()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:06:42 CST" name="userPagePagenation" finished-at="2024-02-05T17:07:07 CST" duration-ms="24217" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPagePagenation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:07:07 CST" name="tearDown" finished-at="2024-02-05T17:07:07 CST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:07:07 CST" name="launchApplication" finished-at="2024-02-05T17:07:10 CST" duration-ms="2263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userPageSelectRow()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:07:10 CST" name="userPageSelectRow" finished-at="2024-02-05T17:07:36 CST" duration-ms="26316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userPageSelectRow -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:07:36 CST" name="tearDown" finished-at="2024-02-05T17:07:36 CST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:07:36 CST" name="launchApplication" finished-at="2024-02-05T17:07:39 CST" duration-ms="2429" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="adminEnrollment()[pri:1, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:07:39 CST" name="adminEnrollment" finished-at="2024-02-05T17:08:08 CST" duration-ms="29415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- adminEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:08:08 CST" name="tearDown" finished-at="2024-02-05T17:08:09 CST" duration-ms="880" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:08:09 CST" name="launchApplication" finished-at="2024-02-05T17:08:11 CST" duration-ms="2358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="encoderEnrollment()[pri:2, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:08:11 CST" name="encoderEnrollment" finished-at="2024-02-05T17:08:46 CST" duration-ms="34512" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- encoderEnrollment -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:08:46 CST" name="tearDown" finished-at="2024-02-05T17:08:47 CST" duration-ms="966" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:08:47 CST" name="launchApplication" finished-at="2024-02-05T17:08:54 CST" duration-ms="7071" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="editUserAccount()[pri:3, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:08:54 CST" name="editUserAccount" finished-at="2024-02-05T17:09:11 CST" duration-ms="17662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- editUserAccount -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.UserModuleTest@14dd7b39]" started-at="2024-02-05T17:09:11 CST" name="tearDown" finished-at="2024-02-05T17:09:12 CST" duration-ms="1017" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.UserModuleTest -->
    </test> <!-- User Module Test -->
    <test started-at="2024-02-05T17:09:13 CST" name="Filter And Search Test" finished-at="2024-02-05T17:10:55 CST" duration-ms="101961">
      <class name="automation.AdminTest.FilterAndSearchTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:13 CST" name="launchApplication" finished-at="2024-02-05T17:09:15 CST" duration-ms="2463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="filterByAdminRole()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:15 CST" name="filterByAdminRole" finished-at="2024-02-05T17:09:33 CST" duration-ms="17815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByAdminRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:33 CST" name="tearDown" finished-at="2024-02-05T17:09:34 CST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:34 CST" name="launchApplication" finished-at="2024-02-05T17:09:36 CST" duration-ms="2364" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="filterByEncoderRole()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:36 CST" name="filterByEncoderRole" finished-at="2024-02-05T17:09:47 CST" duration-ms="10805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterByEncoderRole -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:47 CST" name="tearDown" finished-at="2024-02-05T17:09:48 CST" duration-ms="840" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:48 CST" name="launchApplication" finished-at="2024-02-05T17:09:50 CST" duration-ms="2380" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkingAreaCodeSearch(java.util.HashMap)[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:09:50 CST" name="parkingAreaCodeSearch" data-provider="getData" finished-at="2024-02-05T17:10:04 CST" duration-ms="14088" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1!, mobileNumber=987654321, username=renAdmin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingAreaCodeSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:04 CST" name="tearDown" finished-at="2024-02-05T17:10:05 CST" duration-ms="838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:05 CST" name="launchApplication" finished-at="2024-02-05T17:10:07 CST" duration-ms="2397" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="parkingNameSearch(java.util.HashMap)[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:07 CST" name="parkingNameSearch" data-provider="getData" finished-at="2024-02-05T17:10:22 CST" duration-ms="14144" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{password=Password1!, mobileNumber=987654321, username=renAdmin}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parkingNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:22 CST" name="tearDown" finished-at="2024-02-05T17:10:22 CST" duration-ms="817" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:22 CST" name="launchApplication" finished-at="2024-02-05T17:10:25 CST" duration-ms="2239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userEmailSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:25 CST" name="userEmailSearch" finished-at="2024-02-05T17:10:33 CST" duration-ms="7994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userEmailSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:33 CST" name="tearDown" finished-at="2024-02-05T17:10:33 CST" duration-ms="155" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:33 CST" name="launchApplication" finished-at="2024-02-05T17:10:35 CST" duration-ms="2102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userFirstNameSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:35 CST" name="userFirstNameSearch" finished-at="2024-02-05T17:10:43 CST" duration-ms="7879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userFirstNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:43 CST" name="tearDown" finished-at="2024-02-05T17:10:44 CST" duration-ms="824" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:44 CST" name="launchApplication" finished-at="2024-02-05T17:10:46 CST" duration-ms="2280" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userLastNameSearch()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:46 CST" name="userLastNameSearch" finished-at="2024-02-05T17:10:54 CST" duration-ms="7868" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userLastNameSearch -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.FilterAndSearchTest@5a7fe64f]" started-at="2024-02-05T17:10:54 CST" name="tearDown" finished-at="2024-02-05T17:10:55 CST" duration-ms="822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.FilterAndSearchTest -->
    </test> <!-- Filter And Search Test -->
    <test started-at="2024-02-05T17:10:55 CST" name="Permission Test" finished-at="2024-02-05T17:14:03 CST" duration-ms="188551">
      <class name="automation.AdminTest.PermissionTest">
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:10:55 CST" name="launchApplication" finished-at="2024-02-05T17:10:57 CST" duration-ms="2162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setAllowExitToFalse()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:10:57 CST" name="setAllowExitToFalse" finished-at="2024-02-05T17:11:51 CST" duration-ms="53985" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllowExitToFalse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:11:51 CST" name="tearDown" finished-at="2024-02-05T17:11:52 CST" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:11:52 CST" name="launchApplication" finished-at="2024-02-05T17:11:54 CST" duration-ms="2438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="setAllowExitToTrue()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:11:54 CST" name="setAllowExitToTrue" finished-at="2024-02-05T17:12:17 CST" duration-ms="22643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setAllowExitToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:12:17 CST" name="tearDown" finished-at="2024-02-05T17:12:17 CST" duration-ms="173" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:12:17 CST" name="launchApplication" finished-at="2024-02-05T17:12:19 CST" duration-ms="2346" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithActiveStatus()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:12:19 CST" name="userWithActiveStatus" finished-at="2024-02-05T17:12:43 CST" duration-ms="23739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithActiveStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:12:43 CST" name="tearDown" finished-at="2024-02-05T17:12:44 CST" duration-ms="1056" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:12:44 CST" name="launchApplication" finished-at="2024-02-05T17:12:47 CST" duration-ms="2323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithPaymentAcceptanceSetToFalse()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:12:47 CST" name="userWithPaymentAcceptanceSetToFalse" finished-at="2024-02-05T17:13:08 CST" duration-ms="21085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithPaymentAcceptanceSetToFalse -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:13:08 CST" name="tearDown" finished-at="2024-02-05T17:13:09 CST" duration-ms="1063" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:13:09 CST" name="launchApplication" finished-at="2024-02-05T17:13:11 CST" duration-ms="2490" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithPaymentAcceptanceSetToTrue()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:13:11 CST" name="userWithPaymentAcceptanceSetToTrue" finished-at="2024-02-05T17:13:39 CST" duration-ms="28218" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithPaymentAcceptanceSetToTrue -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:13:39 CST" name="tearDown" finished-at="2024-02-05T17:13:41 CST" duration-ms="1082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="launchApplication()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:13:41 CST" name="launchApplication" finished-at="2024-02-05T17:13:43 CST" duration-ms="2382" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApplication -->
        <test-method signature="userWithRestrictedStatus()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:13:43 CST" name="userWithRestrictedStatus" finished-at="2024-02-05T17:14:03 CST" duration-ms="20162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- userWithRestrictedStatus -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:automation.AdminTest.PermissionTest@465232e9]" started-at="2024-02-05T17:14:03 CST" name="tearDown" finished-at="2024-02-05T17:14:03 CST" duration-ms="135" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- automation.AdminTest.PermissionTest -->
    </test> <!-- Permission Test -->
  </suite> <!-- Suite -->
</testng-results>
